SELECT t.identifier AS 'Type Name', COUNT(*) AS 'Pokemon With This Type', total_stats.TotalStats AS 'Total Stats', total_stats.AverageStats AS 'Average Stats', move_metrics.MoveEfficacy AS 'Move Efficacy', total_moves.TotalMoves AS 'Total Moves', move_effects.MovesWithEffect AS 'Moves With Effect', attack_efficacy.AttackEfficacy AS 'Attack Bonus Efficacy', defense_efficacy.DefenseEfficacy AS 'Defense Bonus Efficacy' FROM types AS t JOIN pokemon AS p ON ps.id == p.species_id JOIN pokemon_types AS pt ON p.id = pt.pokemon_id JOIN pokemon_species AS ps ON pt.type_id = t.id LEFT OUTER JOIN (SELECT t.identifier AS 'Type', SUM(pstats.base_stat) AS 'TotalStats', AVG(pstats.base_stat)*6 AS 'AverageStats' FROM pokemon_species AS pspecies JOIN pokemon AS pkmon ON pspecies.id = pkmon.species_id JOIN pokemon_stats AS pstats ON pkmon.id = pstats.pokemon_id JOIN pokemon_types as pt ON pkmon.id = pt.pokemon_id JOIN types AS t ON pt.type_id = t.id GROUP BY t.identifier) AS total_stats ON total_stats.Type = t.identifier LEFT OUTER JOIN (SELECT t.identifier AS 'Type', AVG(m.power*m.accuracy/100) AS 'MoveEfficacy' FROM moves AS m JOIN move_damage_classes AS mdc ON m.damage_class_id = mdc.id JOIN types AS t ON m.type_id = t.id WHERE mdc.id > 1 GROUP BY t.identifier) AS move_metrics ON move_metrics.Type = t.identifier LEFT OUTER JOIN (SELECT t.identifier AS 'Type', COUNT(*) AS 'MovesWithEffect' FROM moves AS m JOIN move_meta AS ma ON m.id = ma.move_id JOIN move_meta_ailments AS mma ON ma.meta_ailment_id = mma.id JOIN types AS t ON m.type_id = t.id WHERE mma.id > 0 GROUP BY t.identifier) AS move_effects ON move_effects.Type = t.identifier LEFT OUTER JOIN (SELECT t.identifier AS 'Type', COUNT(*) AS 'TotalMoves' FROM moves AS m JOIN types AS t ON m.type_id = t.id GROUP BY t.identifier) AS total_moves ON total_moves.Type = t.identifier LEFT OUTER JOIN (SELECT t.identifier AS 'Type', AVG(te.damage_factor/100) AS 'AttackEfficacy' FROM types AS t JOIN type_efficacy AS te ON t.id = te.damage_type_id GROUP BY te.damage_type_id) AS attack_efficacy ON attack_efficacy.Type = t.identifier LEFT OUTER JOIN (SELECT target_types.Type AS 'Type', AVG(1.0/(target_types.DamageFactor/100.0)) AS 'DefenseEfficacy' FROM (SELECT t.identifier AS 'Type', (CASE WHEN te.damage_factor = 0 THEN 33.0 ELSE (te.damage_factor+0.0) END) AS 'DamageFactor' FROM types AS t JOIN type_efficacy AS te ON t.id = te.target_type_id) AS target_types GROUP BY target_types.Type) AS defense_efficacy ON defense_efficacy.Type = t.identifier GROUP BY t.identifier ORDER BY [Move Efficacy] DESC 
